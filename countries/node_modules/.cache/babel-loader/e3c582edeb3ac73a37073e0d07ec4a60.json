{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Eng Abdirizak Ahmed\\\\Documents\\\\gabi\\\\Sprint-Project-Redux-Countries\\\\countries\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\n//Import Action Types\nimport { ADD_COUNTRY, GET_COUNTRY } from \"../actions/countriesActions\";\nconst initialState = {\n  countries: [],\n  fetchingCountries: false,\n  addingCountry: false,\n  error: \"\"\n};\nexport const countriesReducer = (state = initialState, action) => {\n  console.log(\"reducer\", action.payload);\n\n  switch (action.type) {\n    case ADD_COUNTRY:\n      return _objectSpread({}, state, {\n        countries: [...state.countries, {\n          id: Date.now(),\n          name: action.payload.name,\n          population: action.payload.population,\n          land_area: action.payload.land_area\n        }],\n        fetchingCountries: false,\n        error: \"\"\n      });\n\n    case GET_COUNTRY:\n      return _objectSpread({}, state, {\n        countries: action.payload,\n        addingCountry: false,\n        error: \"\"\n      });\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["C:\\Users\\Eng Abdirizak Ahmed\\Documents\\gabi\\Sprint-Project-Redux-Countries\\countries\\src\\reducers\\countriesReducer.js"],"names":["ADD_COUNTRY","GET_COUNTRY","initialState","countries","fetchingCountries","addingCountry","error","countriesReducer","state","action","console","log","payload","type","id","Date","now","name","population","land_area"],"mappings":";AAAA;AAEA,SAASA,WAAT,EAAsBC,WAAtB,QAAwC,6BAAxC;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,SAAS,EAAE,EADM;AAEjBC,EAAAA,iBAAiB,EAAE,KAFF;AAGjBC,EAAAA,aAAa,EAAE,KAHE;AAIjBC,EAAAA,KAAK,EAAE;AAJU,CAArB;AAQA,OAAO,MAAMC,gBAAgB,GAAG,CAACC,KAAK,GAAGN,YAAT,EAAuBO,MAAvB,KAAkC;AAE9DC,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAsBF,MAAM,CAACG,OAA7B;;AACA,UAAOH,MAAM,CAACI,IAAd;AACI,SAAKb,WAAL;AACA,+BACOQ,KADP;AAEIL,QAAAA,SAAS,EAAE,CACP,GAAGK,KAAK,CAACL,SADF,EAEP;AAACW,UAAAA,EAAE,EAACC,IAAI,CAACC,GAAL,EAAJ;AAAgBC,UAAAA,IAAI,EAACR,MAAM,CAACG,OAAP,CAAeK,IAApC;AAA0CC,UAAAA,UAAU,EAACT,MAAM,CAACG,OAAP,CAAeM,UAApE;AAAgFC,UAAAA,SAAS,EAACV,MAAM,CAACG,OAAP,CAAeO;AAAzG,SAFO,CAFf;AAOIf,QAAAA,iBAAiB,EAAC,KAPtB;AAQIE,QAAAA,KAAK,EAAC;AARV;;AAUA,SAAKL,WAAL;AACA,+BACOO,KADP;AAEGL,QAAAA,SAAS,EAACM,MAAM,CAACG,OAFpB;AAGIP,QAAAA,aAAa,EAAC,KAHlB;AAIIC,QAAAA,KAAK,EAAC;AAJV;;AAOA;AACA,aAAOE,KAAP;AArBJ;AAwBH,CA3BM","sourcesContent":["//Import Action Types\r\n\r\nimport { ADD_COUNTRY, GET_COUNTRY} from \"../actions/countriesActions\";\r\n\r\nconst initialState = {\r\n    countries: [],\r\n    fetchingCountries: false,\r\n    addingCountry: false,\r\n    error: \"\"\r\n   \r\n    };\r\n\r\nexport const countriesReducer = (state = initialState, action) => {\r\n\r\n    console.log(\"reducer\",action.payload)\r\n    switch(action.type){\r\n        case ADD_COUNTRY: \r\n        return{\r\n            ...state,\r\n            countries: [\r\n                ...state.countries,\r\n                {id:Date.now(), name:action.payload.name, population:action.payload.population, land_area:action.payload.land_area}\r\n            ],\r\n\r\n            fetchingCountries:false,\r\n            error:\"\"\r\n        }\r\n        case GET_COUNTRY: \r\n        return{\r\n            ...state,\r\n           countries:action.payload,\r\n            addingCountry:false,\r\n            error:\"\"\r\n        }\r\n       \r\n        default: \r\n        return state\r\n\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}